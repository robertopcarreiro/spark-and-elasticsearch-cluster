version: "3.7"

volumes:
  shared-workspace:
    name: "docker-spark-volume"
    driver: local
  esdata:
    name: "docker-elastic-volume"
    driver: local

services:
  jupyterlab:
    image: jupyterlab
    container_name: jupyterlab
    deploy:
      resources: 
        limits: 
          cpus: "2"
          memory: 16G
    ports:
      - 8888:8888
    volumes:
      - shared-workspace:/opt/workspace

  spark-master:
    image: spark-master
    container_name: spark-master
    deploy:
      resources: 
        limits: 
          cpus: "8"
          memory: 32G
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace

  spark-worker-1:
    image: spark-worker
    container_name: spark-worker-1
    deploy:
      resources: 
        limits: 
          cpus: "8"
          memory: 32G
    environment:
      - SPARK_WORKER_CORES=8
      - SPARK_WORKER_MEMORY=32G
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-2:
    image: spark-worker
    container_name: spark-worker-2
    deploy:
      resources: 
        limits: 
          cpus: "8"  
          memory: 32G       
    environment:
      - SPARK_WORKER_CORES=8
      - SPARK_WORKER_MEMORY=32G
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-3:
    image: spark-worker
    container_name: spark-worker-3
    deploy:
      resources: 
        limits: 
          cpus: "8"  
          memory: 32G       
    environment:
      - SPARK_WORKER_CORES=8
      - SPARK_WORKER_MEMORY=32G
    ports:
      - 8083:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-4:
    image: spark-worker
    container_name: spark-worker-4
    deploy:
      resources: 
        limits: 
          cpus: "8"  
          memory: 32G       
    environment:
      - SPARK_WORKER_CORES=8
      - SPARK_WORKER_MEMORY=32G
    ports:
      - 8084:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-5:
    image: spark-worker
    container_name: spark-worker-5
    deploy:
      resources: 
        limits: 
          cpus: "8"  
          memory: 32G       
    environment:
      - SPARK_WORKER_CORES=8
      - SPARK_WORKER_MEMORY=32G
    ports:
      - 8085:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    deploy:
      resources: 
        limits: 
          cpus: "16" 
          memory: 64G       
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      xpack.monitoring.enabled: "true"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data

  hq:
    image: elastichq/elasticsearch-hq
    container_name: elastic-hq
    deploy:
      resources: 
        limits: 
          cpus: "2"  
          memory: 16G       
    ports:
      - "5000:5000"
    environment:
      HQ_DEFAULT_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
      
  #kibana:
  #  image: docker.elastic.co/kibana/kibana:7.7.0
  #  container_name: kibana
  #  ports:
  #    - "5601:5601"
  #  environment:
  #    ELASTICSEARCH_URL: http://elasticsearch:9200
  #  depends_on:
  #    - elasticsearch
